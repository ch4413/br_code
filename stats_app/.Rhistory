qplot(mpg, data = mtcars, binwidth = 5)
library(ggplot2)
qplot(mpg, data = mtcars, binwidth = 5)
myPlot <- qplot(wt, mpg, data = mtcars)
myPlot
library(ggplot2)
qplot(Ozone, Wind, airquality)
qplot(Ozone, Wind, airquality)
datasets::airquality
qplot(Ozone
, Wind, airquality)
qplot(Ozone, Wind, data = airquality)
qplot(wt, data = mtcars)
qplot(wt, data = mtcars, binwidth = 30)
qplot(wt, data = mtcars, binwidth = 1)
qplot(wt, data = mtcars, binwidth = 0.5)
qplot(wt, data = mtcars, bins = 6)
qplot(wt, data = mtcars, bins = 20)
qplot(factor(Month), Wind, data = airquality, geom = "boxplot")
qplot(Wind, Month, data = airquality)
qplot(Ozone, Wind, data = airquality)
qplot(Ozone, Wind, data = airquality) + geom_smooth()
qplot(Ozone, Wind, data = airquality) + geom_smooth(method = "lm")
qplot(Ozone, Wind, data = airquality) + geom_smooth(method = "lm", na.rm = TRUE)
qplot(Ozone, Wind, data = airquality, na.rm = TRUE) + geom_smooth(method = "lm", na.rm = TRUE)
qplot(Ozone, Wind, data = airquality, na.rm = TRUE) + geom_smooth(method = "lm", na.rm = TRUE, se = FALSE)
qplot(Ozone, Wind, data = airquality, na.rm = TRUE) +
geom_smooth(method = "lm", na.rm = TRUE, se = FALSE)
library(mangoTraining)
qplot(Height, Weight, data = demoData)
names(demoData)
qplot(Height, Weight, data = demoData, colour = Sex)
qplot(Height, Weight, data = demoData, colour = Sex, shape = Smokes)
qplot(Height, Weight, data = demoData, colour = Sex, shape = Smokes, size = I(2))
qplot(Height, Weight, data = demoData, colour = Sex, shape = Smokes, size = I(4))
qplot(Height, Weight, data = demoData, colour = Sex, shape = Smokes, size = I(2))
airquality %>%
filter(Month == 5) %>%
qplot(Wind, Day)
library(ggplot2)
library(dplyr)
airquality %>%
filter(Month == 5) %>%
qplot(Wind, Day)
airquality %>%
filter(Month == 5) %>%
qplot(Wind, Day, data = airquality)
May <- airquality %>%
filter(Month == 5)
qplot(Wind, Day, data = May)
qplot(Wind, Day, data = May) + geom_abline()
qplot(Wind, Day, data = May) + geom_hline()
qplot(Wind, Day, data = May) + geom_line()
qplot(Wind, Day, data = May) + geom_line()
qplot(Wind, Day, data = airquality)
qplot(Wind, Day, data = airquality, colour = Month)
qplot(Wind, Day, data = airquality, colour = factor(Month))
qplot(Wind, Day, data = airquality, colour = factor(Month)) + geom_line()
qplot(Wind, Day, data = airquality, colour = factor(Month)) + geom_line(aes(factor(Month)))
qplot(Wind, Day, data = airquality, colour = factor(Month)) + geom_line(aes(colour = factor(Month)))
qplot(Wind, Day, data = airquality, linetype = factor(Month)) + geom_line()
qplot(Temp, Day, data = airquality)
qplot(Temp, Day, data = airquality, geom = "line")
qplot(Temp, Day, data = airquality, geom = "line", colour = factor(Month))
qplot(Day, Temp, data = airquality, geom = "line", colour = factor(Month))
qplot(Day, Temp, data = airquality, geom = "line")
qplot(Day, Temp, data = airquality, geom = "line") + facet_grid( . ~ Month)
qplot(disp, mpg, data = mtcars)
qplot(disp, mpg, data = mtcars, colour = factor(cyl))
qplot(disp, mpg, data = mtcars, colour = factor(cyl)) + facet_grid( . ~ am)
View(pkData)
View(pkData)
qplot(Concentration, time, data = pkData) + facet_grid( . ~ Dose)
qplot(Conc, time, data = pkData) + facet_grid( . ~ Dose)
qplot(Conc, Time, data = pkData) + facet_grid( . ~ Dose)
theme_update(strip.background = element_rect())
qplot(Conc, Time, data = pkData) + facet_grid(Dose ~ .)
qplot(Time, Conc, data = pkData) + facet_grid(Dose ~ .)
qplot(Time, Conc, data = pkData) + facet_grid(Dose ~ .) + scale_x_continuous(breaks = NA)
f <- qplot(Time, Conc, data = pkData) + facet_grid(Dose ~ .)
f
theme_update(
panel.grid.major() = element_blank()
)
theme_update(
panel.grid.major = element_blank()
)
f
f <- qplot(Time, Conc, data = pkData) + facet_grid(Dose ~ .)
f + theme(panel.grid.minor.x=element_blank(),
panel.grid.major.x=element_blank())
qplot(mpg, wt, data = mtcars)
qplot(mpg, wt, data = mtcars) + geom_smooth(method = "lm")
mtcarsFit <- lm(formula = mpg ~ wt, data = mtcars)
summary(mtcarsFit)
mtcarsFit$coefficients
mtcarsFit$residuals
qplot(x = cyl, y = mtcarsFit$residuals, data = mtcars)
mpgwt <- lm(formula = wt ~ mpg, data = mtcars)
summarise(mpgwt)
plot(mpgwt)
par(mfrow = c(2, 2) )
plot(mpgwt)
?plot.lm
library(tidyr)
View(airquality)
?gather
gather(airquality, key = Variable, value = c("Ozone", "Solar.R", "Wind", "Temp"))
airquality %>% gather(obs, value, -Month, -Day)
gather(airquality, key = Variable, value = Value, -c(Month, Day) )
airquality %>%
gather(obs, value, -c(Month, Day))
?spread
airquality %>%
gather(obs, value, -c(Month, Day)) %>%
spread(Month)
airquality %>%
gather(obs, value, -c(Month, Day)) %>%
spread(Month, value = rest)
airquality %>%
gather(obs, value, -c(Month, Day)) %>%
spread(Month, value = value)
airquality %>%
gather(obs, value, -c(Month, Day)) %>%
spread(key = Month, value = value)
View(pkData)
View(pkData)
pkByTime <- pkData %>%
spread(key = Time, value = Conc)
View(pkByTime)
library(dplyr)
library(shiny)
?t.test
outputTs <- function(sample1, sample2) {
tt <- t.test(sample1, sample2, paired = TRUE)
}
sleep
s1 <- sleep$extra[1:10]
s2 <- sleep$extra[1:20]
s2
s2 <- sleep$extra[11:20]
s2
s1 <- sleep$extra[1:10]
s2 <- sleep$extra[11:20]
outputTs(s1, s2)
outputTs <- function(sample1, sample2) {
tt <- t.test(sample1, sample2, paired = TRUE)
tt
}
s1 <- sleep$extra[1:10]
s2 <- sleep$extra[11:20]
outputTs(s1, s2)
v <- outputTs(s1, s2)
v$statistic
v$data.name
v$parameter
v$conf.int
unlist(v)
?t.test
t(unlist(v))
library(dplyr)
tibble(unlist(v))
aa <- tibble(unlist(v))
names(v)
aa$metric <- names(v)
aa$metric <- names(unlist(v))
aa
names(aa) <- c("value", "metric")
install.packages("effsize")
getw
getwd()
setwd("/Users/chughes/Desktop/br_code/br_code/stats_app/")
library(shiny)
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
rsconnect::deployApp()
